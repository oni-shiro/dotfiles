{
  "workbench.colorTheme": "One Dark Pro",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.preferredDarkColorTheme": "One Hunter Flexoki Dark",
  "workbench.preferredHighContrastColorTheme": "One Hunter Flexoki Dark",
  "workbench.preferredHighContrastLightColorTheme": "One Hunter Flexoki Dark",
  "workbench.preferredLightColorTheme": "One Hunter Flexoki Dark",
  "workbench.colorCustomizations": {
    // Border separating the title bar from the rest of the editor
    "titleBar.border": "#18222D",
    // Border color to separate Tabs from each other
    "tab.border": "#18222D",
    // Border color on the top separating to the editor (terminal)
    "panel.border": "#18222D",
    // Border color on the side separating the editor
    "sideBar.border": "#18222D",
    // "statusBar.background": "#000000",
    "statusBar.debuggingBackground": "#000000",
    "statusBar.noFolderBackground": "#000000",
    // Border color with the Side Bar
    "activityBar.border": "#18222D",
    // Border color separating the Status Bar and editor
    "statusBar.border": "#18222D",
    // Border color to separate multiple editor groups from each other
    "editorGroup.border": "#18222D",
    // Border color of the editor group title header when tabs are enabled
    "editorGroupHeader.tabsBorder": "#18222D",
  },
  "workbench.startupEditor": "none",
  "workbench.tree.renderIndentGuides": "none",
  "workbench.sideBar.location": "right",
  "workbench.editor.pinnedTabSizing": "compact",
  "editor.fontFamily": "JetBrains Mono",
  "editor.fontVariations": true,
  "editor.fontWeight": "400",
  "editor.fontSize": 18,
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "all",
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "window.density.editorTabHeight": "compact",
  "terminal.integrated.fontFamily": "DankMono Nerd Font",
  "terminal.integrated.fontSize": 18,
  "terminal.integrated.copyOnSelection": true,
  "go.toolsManagement.autoUpdate": true,
  "redhat.telemetry.enabled": false,
  "glassit.alpha": 255,
  "fonted.font": "JetBrains Mono",
  "dotnet.automaticallyCreateSolutionInWorkspace": false,
  "NugetGallery.credentialProviderFolder": "{user-profile}/.nuget/plugins/netcore/CredentialProvider.Microsoft",
  "NugetGallery.skipRestore": false,
  "NugetGallery.sources": [
    "{\"name\":\"nuget.org\",\"url\":\"https://api.nuget.org/v3/index.json\"}",
    "{\"name:\"local\", \"url\":\"C:\\Dev\\Worker-Broker\\nupkg\""
  ],
  /* vim related   */
  // "terminal.integrated.enablemultilinepastewarning": false,
  // "files.autosave": "afterdelay",
  // "editor.linenumbers": "relative",
  // // "vim.vimrc.enable": true,
  // // "vim.vimrc.path": "$home/.vimrc",
  // "workbench.settings.applytoallprofiles": [],
  // Vim config ====================================================================================
  "vim.leader": "<Space>",
  "vim.useSystemClipboard": true,
  // To improve performance"
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.hlsearch": true,
  //Bind p in visual mode to paste without overriding the current register:
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "p",
      ],
      "after": [
        "p",
        "g",
        "v",
        "y"
      ]
    },
    {
      "before": [
        "d"
      ],
      "after": [
        "\"",
        "_",
        "d"
      ]
    },
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "d",
        "d"
      ],
      "after": [
        "\"",
        "_",
        "d",
        "d"
      ]
    },
  ],
  /* This and below configuration only works if you have neovim installed - read https://github.com/VSCodeVim/Vim/#key-remapping  */
  "vim.enableNeovim": true,
  "csharp.debug.symbolOptions.searchNuGetOrgSymbolServer": true,
  "versionlens.dotnet.nuget.sources": [],
  "files.exclude": {
    "**/bin": true,
    "**/obj": true
  },
}
